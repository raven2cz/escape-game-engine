* {
    box-sizing: border-box
}

html,
body {
    height: 100%;
    margin: 0;
    font-family: system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif;
    background: #0f0f12;
    color: #f5f5f5
}

.topbar {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 10px 14px;
    background: #17171c;
    border-bottom: 1px solid #2a2a33;
    position: sticky;
    top: 0;
    z-index: 50
}

.topbar .title {
    font-weight: 700;
    letter-spacing: .3px
}

.topbar .controls button {
    margin-left: 8px;
    background: #2b2b34;
    color: #fff;
    border: 1px solid #3a3a47;
    border-radius: 10px;
    padding: 8px 10px;
    cursor: pointer
}

.topbar .controls button:hover {
    background: #3a3a47
}

#gameRoot {
    max-width: 1100px;
    margin: 0 auto;
    padding: 10px
}

#sceneContainer {
    position: relative;
    aspect-ratio: 16/9;
    background: #111;
    border: 1px solid #2a2a33;
    border-radius: 14px;
    overflow: hidden
}

#sceneImage {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block
}

#hotspotLayer {
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0
}

.hotspot {
    position: absolute;
    border: 2px solid rgba(255, 255, 255, .0);
    cursor: pointer
}

.hotspot:focus {
    outline: none
}

.hotspot.require {
    outline: 2px dashed rgba(255, 255, 0, .8)
}

#uiBar {
    display: flex;
    gap: 10px;
    align-items: center;
    justify-content: space-between;
    margin-top: 10px
}

#inventory {
    display: flex;
    gap: 8px;
    flex-wrap: wrap
}

.item {
    display: flex;
    align-items: center;
    gap: 6px;
    background: #1b1b22;
    border: 1px solid #2c2c37;
    border-radius: 10px;
    padding: 6px 10px;
    cursor: pointer;
    color: #f5f5f5;
}

.item span {
    color: inherit;
}

.item:active {
    transform: translateY(1px);
    opacity: .9
}

.item img {
    width: 22px;
    height: 22px;
    object-fit: contain
}

#msg {
    opacity: .9
}

.hidden {
    display: none !important
}

#modal {
    position: fixed;
    inset: 0;
    background: rgba(0, 0, 0, .55);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 100
}

.modal-content {
    width: min(520px, 92vw);
    background: #18181d;
    border: 1px solid #30303b;
    border-radius: 14px;
    padding: 14px
}

.modal-title {
    font-weight: 700;
    margin-bottom: 8px
}

.modal-body input[type=text],
.modal-body input[type=password] {
    width: 100%;
    padding: 10px;
    border-radius: 10px;
    border: 1px solid #343444;
    background: #101014;
    color: #fff
}

#editorOverlay {
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    pointer-events: none;
    z-index: 20;
}

.editor-on #hotspotLayer .hotspot {
    pointer-events: none !important;
    border-color: rgba(0, 200, 255, .75)
}

.editor-toolbar {
    position: absolute;
    right: 10px;
    top: 10px;
    z-index: 1000;
    pointer-events: auto;
    background: #15151a;
    border: 1px solid #2a2a33;
    border-radius: 10px;
    padding: 8px 10px;
    display: flex;
    gap: 6px;
}

.editor-toolbar button {
    background: #2b2b34;
    color: #fff;
    border: 1px solid #3a3a47;
    border-radius: 8px;
    padding: 6px 8px;
    cursor: pointer
}

.editor-hint {
    position: absolute;
    left: 10px;
    top: 10px;
    background: rgba(0, 0, 0, .45);
    padding: 6px 8px;
    border-radius: 8px
}

.hs-label {
    font-size: 10px;
    line-height: 1;
    color: #fff;
    background: rgba(0, 0, 0, .55);
    padding: 2px 4px;
    border-radius: 4px;
    pointer-events: none;
    user-select: none;
}

.editor-jsonpanel {
    position: absolute;
    top: 10px;
    left: 10px;
    z-index: 1001;
    pointer-events: auto;
    width: min(320px, 90vw);
    background: #15151a;
    border: 1px solid #2a2a33;
    border-radius: 10px;
    padding: 10px;
    display: grid;
    gap: 8px;
}

.editor-jsonpanel-title {
    font-weight: 700
}

.editor-jsonpanel-text {
    width: 100%;
    resize: vertical;
    min-height: 110px;
    background: #0f0f12;
    color: #f5f5f5;
    border: 1px solid #343444;
    border-radius: 8px;
    padding: 8px;
}

.editor-jsonpanel-actions {
    display: flex;
    gap: 8px;
    justify-content: flex-end;
}

.editor-jsonpanel-actions button {
    background: #2b2b34;
    color: #fff;
    border: 1px solid #3a3a47;
    border-radius: 8px;
    padding: 6px 10px;
    cursor: pointer;
}

#hotspotLayer .hotspot {
    position: absolute;
    background: transparent !important;
    border: 0 !important;
    outline: none !important;
    box-shadow: none !important;
    padding: 0;
    margin: 0;
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    -webkit-tap-highlight-color: transparent; /* mobile Safari/Chrome */
    cursor: pointer;
}

#hotspotLayer .hotspot:focus,
#hotspotLayer .hotspot:focus-visible {
    outline: none !important;
    box-shadow: none !important;
}

.editor-on #hotspotLayer .hotspot {
    border: 2px dashed rgba(0, 200, 255, .9) !important;
    background: rgba(0, 200, 255, .12) !important;
}

.editor-on #hotspotLayer .hotspot.require {
    border-style: dashed;
    border-color: rgba(255, 255, 0, .9) !important;
    background: rgba(255, 255, 0, .12) !important;
}

.toast-container {
    position: fixed !important;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    display: flex !important;
    align-items: center;
    justify-content: center;
    z-index: 1200;
    pointer-events: none;
}

/* Toast */
.toast {
    max-width: min(640px, 90vw);
    background: rgba(20, 20, 26, .95);
    color: #f5f5f5;
    border: 1px solid #2a2a33;
    border-radius: 12px;
    padding: 12px 16px;
    font-size: 16px;
    text-align: center;
    box-shadow: 0 8px 30px rgba(0, 0, 0, .35);
    transition: opacity .3s ease, transform .3s ease;
    opacity: 1;
    transform: none;
}

.toast.hide {
    opacity: 0;
    transform: translateY(6px);
}

.hs-glow {
    position: absolute;
    pointer-events: none;
    z-index: 50;
    border-radius: 12px;
    background: radial-gradient(ellipse at center,
    rgba(0, 200, 255, 0.18) 0%,
    rgba(0, 200, 255, 0.12) 60%,
    rgba(0, 200, 255, 0.00) 100%);
    box-shadow:
            0 0 0.8rem rgba(0, 200, 255, .35),
            0 0 2.2rem rgba(0, 200, 255, .25);
    animation: hs-pulse 1.4s ease-in-out infinite;
    will-change: opacity, transform;
}

/* .hs-glow.outline { background: transparent; border: 2px solid rgba(0,200,255,.9); } */

@keyframes hs-pulse {
    0% {
        opacity: 0.65;
        transform: scale(0.98);
    }

    50% {
        opacity: 1.00;
        transform: scale(1.00);
    }

    100% {
        opacity: 0.65;
        transform: scale(0.98);
    }
}

/* Selected inventory item (use-mode) */
.item.selected {
    outline: 2px solid rgba(30, 144, 255, 0.9);
    outline-offset: 2px;
}

/* Optional: cursor hint while in use-mode */
body.use-on #hotspotLayer {
    cursor: crosshair;
}

/* === Dialog UI – portraits pinned to panel (baseline + speaking effect) === */

.dlg-overlay {
    position: absolute;      /* inside #sceneContainer */
    inset: 0;
    z-index: 1100;
    display: grid;
    grid-template-rows: 1fr auto; /* stage on top, panel at bottom */
    background: rgba(0,0,0,0.35);
    pointer-events: none;    /* clicks pass through; panel handles them */
}
.dlg-overlay.hidden { display: none !important; }

/* top stage – its bottom edge aligns with panel’s top edge */
.dlg-stage {
    position: relative;
    min-height: 0;
    overflow: hidden;
    pointer-events: none;
}

/* Portrait frame is absolutely positioned in .dlg-stage,
   sitting on the bottom => exactly on top of the panel */
.dlg-char {
    position: absolute;
    left: 2vw;
    right: auto;
    bottom: 0;               /* KEY: sit on the panel */
    height: 100%;            /* height = full stage */
    width: min(42vw, 380px);
    display: flex;
    align-items: flex-end;   /* image sits on the “ground” of the frame */
    justify-content: center;
    user-select: none;
    transform: translateY(0) scale(1);
    transition: transform .18s ease, filter .18s ease;
    will-change: transform, filter;
}
.dlg-char.right { left: auto; right: 2vw; }

/* Images never exceed the frame height.
   Small safety offset so heads don’t clip on a pixel. */
.dlg-char-img {
    width: 100%;
    height: auto;
    max-height: calc(100% - 6px);
    object-fit: contain;
    filter: drop-shadow(0 10px 28px rgba(0,0,0,.45));
    backface-visibility: hidden;
    transform: translateZ(0);
}

/* Speaker emphasis – NO opacity: gentle lift+scale and stronger shadow */
.dlg-char.speaking {
    transform: translateY(-6px) scale(1.02);
}
.dlg-char.speaking .dlg-char-img {
    filter: drop-shadow(0 12px 34px rgba(0,0,0,.55)) saturate(1.04);
}

/* Non-speaker: tiny attenuation only (no transparency) */
.dlg-char:not(.speaking) .dlg-char-img {
    filter: drop-shadow(0 10px 28px rgba(0,0,0,.45)) brightness(.95);
}

/* panel */
.dlg-panel {
    position: relative;
    width: min(1100px, 100%);
    margin: 0 auto;
    background: rgba(17,17,20,.92);
    border: 1px solid #2a2a33;
    border-radius: 14px 14px 0 0;
    padding: 12px 14px 32px 14px;
    box-shadow: 0 -8px 30px rgba(0,0,0,.35);
    pointer-events: auto; /* panel accepts clicks */
}

/* speaker nameplate – sits on the panel, left-aligned */
.dlg-nameplate {
    position: absolute;
    left: 16px;
    top: -26px;
    background: rgba(17,17,20,.92);
    border: 1px solid #2a2a33;
    border-bottom: none;
    border-radius: 10px 10px 0 0;
    padding: 6px 10px;
    font-weight: 700;
    color: #f0f0f6;
    max-width: 46%;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

/* text / choices */
.dlg-text {
    min-height: 56px;
    line-height: 1.45;
    color: #f5f5f5;
}

.dlg-choices {
    margin-top: 10px;
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
}

.dlg-choice {
    background: #2b2b34;
    color: #fff;
    border: 1px solid #3a3a47;
    border-radius: 10px;
    padding: 8px 10px;
    cursor: pointer;
}
.dlg-choice:active { transform: translateY(1px); opacity: .95; }

.dlg-continue {
    position: absolute;
    right: 12px;
    bottom: 8px;
    font-size: 12px;
    opacity: .75;
    user-select: none;
}

/* compact mode */
.dlg-compact .dlg-char { width: min(36vw, 300px); }
@media (max-width: 720px) { .dlg-char { width: min(46vw, 300px); } }

/* Editor režim může měnit vzhled hotspotů,
   ale jen uvnitř #hotspotLayer a jen .hotspot */
.editor-on #hotspotLayer .hotspot {
    /* tvé zvýraznění v editoru */
}

/* Při puzzle módu skryj pouze scene hotspoty – NE vrstvu, NE puzzle */
.editor-puzzle-mode #hotspotLayer > .hotspot {
    visibility: hidden !important;
    pointer-events: none !important;
}